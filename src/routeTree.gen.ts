/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardCoursesCourseIdRouteImport } from './routes/dashboard/courses.$courseId'
import { Route as DashboardCoursesCourseIdModuleModuleIdIndexRouteImport } from './routes/dashboard/courses.$courseId.module.$moduleId.index'
import { Route as DashboardCoursesCourseIdModuleModuleIdResourcesResourceIdRouteImport } from './routes/dashboard/courses.$courseId.module.$moduleId.resources.$resourceId'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardCoursesCourseIdRoute =
  DashboardCoursesCourseIdRouteImport.update({
    id: '/courses/$courseId',
    path: '/courses/$courseId',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardCoursesCourseIdModuleModuleIdIndexRoute =
  DashboardCoursesCourseIdModuleModuleIdIndexRouteImport.update({
    id: '/module/$moduleId/',
    path: '/module/$moduleId/',
    getParentRoute: () => DashboardCoursesCourseIdRoute,
  } as any)
const DashboardCoursesCourseIdModuleModuleIdResourcesResourceIdRoute =
  DashboardCoursesCourseIdModuleModuleIdResourcesResourceIdRouteImport.update({
    id: '/module/$moduleId/resources/$resourceId',
    path: '/module/$moduleId/resources/$resourceId',
    getParentRoute: () => DashboardCoursesCourseIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/courses/$courseId': typeof DashboardCoursesCourseIdRouteWithChildren
  '/dashboard/courses/$courseId/module/$moduleId': typeof DashboardCoursesCourseIdModuleModuleIdIndexRoute
  '/dashboard/courses/$courseId/module/$moduleId/resources/$resourceId': typeof DashboardCoursesCourseIdModuleModuleIdResourcesResourceIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/courses/$courseId': typeof DashboardCoursesCourseIdRouteWithChildren
  '/dashboard/courses/$courseId/module/$moduleId': typeof DashboardCoursesCourseIdModuleModuleIdIndexRoute
  '/dashboard/courses/$courseId/module/$moduleId/resources/$resourceId': typeof DashboardCoursesCourseIdModuleModuleIdResourcesResourceIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/courses/$courseId': typeof DashboardCoursesCourseIdRouteWithChildren
  '/dashboard/courses/$courseId/module/$moduleId/': typeof DashboardCoursesCourseIdModuleModuleIdIndexRoute
  '/dashboard/courses/$courseId/module/$moduleId/resources/$resourceId': typeof DashboardCoursesCourseIdModuleModuleIdResourcesResourceIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/'
    | '/dashboard/courses/$courseId'
    | '/dashboard/courses/$courseId/module/$moduleId'
    | '/dashboard/courses/$courseId/module/$moduleId/resources/$resourceId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/dashboard/courses/$courseId'
    | '/dashboard/courses/$courseId/module/$moduleId'
    | '/dashboard/courses/$courseId/module/$moduleId/resources/$resourceId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard/'
    | '/dashboard/courses/$courseId'
    | '/dashboard/courses/$courseId/module/$moduleId/'
    | '/dashboard/courses/$courseId/module/$moduleId/resources/$resourceId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/courses/$courseId': {
      id: '/dashboard/courses/$courseId'
      path: '/courses/$courseId'
      fullPath: '/dashboard/courses/$courseId'
      preLoaderRoute: typeof DashboardCoursesCourseIdRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/courses/$courseId/module/$moduleId/': {
      id: '/dashboard/courses/$courseId/module/$moduleId/'
      path: '/module/$moduleId'
      fullPath: '/dashboard/courses/$courseId/module/$moduleId'
      preLoaderRoute: typeof DashboardCoursesCourseIdModuleModuleIdIndexRouteImport
      parentRoute: typeof DashboardCoursesCourseIdRoute
    }
    '/dashboard/courses/$courseId/module/$moduleId/resources/$resourceId': {
      id: '/dashboard/courses/$courseId/module/$moduleId/resources/$resourceId'
      path: '/module/$moduleId/resources/$resourceId'
      fullPath: '/dashboard/courses/$courseId/module/$moduleId/resources/$resourceId'
      preLoaderRoute: typeof DashboardCoursesCourseIdModuleModuleIdResourcesResourceIdRouteImport
      parentRoute: typeof DashboardCoursesCourseIdRoute
    }
  }
}

interface DashboardCoursesCourseIdRouteChildren {
  DashboardCoursesCourseIdModuleModuleIdIndexRoute: typeof DashboardCoursesCourseIdModuleModuleIdIndexRoute
  DashboardCoursesCourseIdModuleModuleIdResourcesResourceIdRoute: typeof DashboardCoursesCourseIdModuleModuleIdResourcesResourceIdRoute
}

const DashboardCoursesCourseIdRouteChildren: DashboardCoursesCourseIdRouteChildren =
  {
    DashboardCoursesCourseIdModuleModuleIdIndexRoute:
      DashboardCoursesCourseIdModuleModuleIdIndexRoute,
    DashboardCoursesCourseIdModuleModuleIdResourcesResourceIdRoute:
      DashboardCoursesCourseIdModuleModuleIdResourcesResourceIdRoute,
  }

const DashboardCoursesCourseIdRouteWithChildren =
  DashboardCoursesCourseIdRoute._addFileChildren(
    DashboardCoursesCourseIdRouteChildren,
  )

interface DashboardRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardCoursesCourseIdRoute: typeof DashboardCoursesCourseIdRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardCoursesCourseIdRoute: DashboardCoursesCourseIdRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
