/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DummyContentRouteImport } from './routes/dummy.content'
import { Route as DashboardCoursesCourseNameRouteImport } from './routes/dashboard/courses.$courseName'
import { Route as DashboardCoursesCourseNameModuleModuleNameRouteImport } from './routes/dashboard/courses.$courseName.module.$moduleName'
import { Route as DashboardCoursesCourseNameModuleModuleNameResourcesResourceNameRouteImport } from './routes/dashboard/courses.$courseName.module.$moduleName.resources.$resourceName'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const DummyContentRoute = DummyContentRouteImport.update({
  id: '/dummy/content',
  path: '/dummy/content',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardCoursesCourseNameRoute =
  DashboardCoursesCourseNameRouteImport.update({
    id: '/dashboard/courses/$courseName',
    path: '/dashboard/courses/$courseName',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardCoursesCourseNameModuleModuleNameRoute =
  DashboardCoursesCourseNameModuleModuleNameRouteImport.update({
    id: '/module/$moduleName',
    path: '/module/$moduleName',
    getParentRoute: () => DashboardCoursesCourseNameRoute,
  } as any)
const DashboardCoursesCourseNameModuleModuleNameResourcesResourceNameRoute =
  DashboardCoursesCourseNameModuleModuleNameResourcesResourceNameRouteImport.update(
    {
      id: '/resources/$resourceName',
      path: '/resources/$resourceName',
      getParentRoute: () => DashboardCoursesCourseNameModuleModuleNameRoute,
    } as any,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dummy/content': typeof DummyContentRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/courses/$courseName': typeof DashboardCoursesCourseNameRouteWithChildren
  '/dashboard/courses/$courseName/module/$moduleName': typeof DashboardCoursesCourseNameModuleModuleNameRouteWithChildren
  '/dashboard/courses/$courseName/module/$moduleName/resources/$resourceName': typeof DashboardCoursesCourseNameModuleModuleNameResourcesResourceNameRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dummy/content': typeof DummyContentRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/courses/$courseName': typeof DashboardCoursesCourseNameRouteWithChildren
  '/dashboard/courses/$courseName/module/$moduleName': typeof DashboardCoursesCourseNameModuleModuleNameRouteWithChildren
  '/dashboard/courses/$courseName/module/$moduleName/resources/$resourceName': typeof DashboardCoursesCourseNameModuleModuleNameResourcesResourceNameRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dummy/content': typeof DummyContentRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/courses/$courseName': typeof DashboardCoursesCourseNameRouteWithChildren
  '/dashboard/courses/$courseName/module/$moduleName': typeof DashboardCoursesCourseNameModuleModuleNameRouteWithChildren
  '/dashboard/courses/$courseName/module/$moduleName/resources/$resourceName': typeof DashboardCoursesCourseNameModuleModuleNameResourcesResourceNameRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dummy/content'
    | '/dashboard'
    | '/dashboard/courses/$courseName'
    | '/dashboard/courses/$courseName/module/$moduleName'
    | '/dashboard/courses/$courseName/module/$moduleName/resources/$resourceName'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dummy/content'
    | '/dashboard'
    | '/dashboard/courses/$courseName'
    | '/dashboard/courses/$courseName/module/$moduleName'
    | '/dashboard/courses/$courseName/module/$moduleName/resources/$resourceName'
  id:
    | '__root__'
    | '/'
    | '/dummy/content'
    | '/dashboard/'
    | '/dashboard/courses/$courseName'
    | '/dashboard/courses/$courseName/module/$moduleName'
    | '/dashboard/courses/$courseName/module/$moduleName/resources/$resourceName'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DummyContentRoute: typeof DummyContentRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardCoursesCourseNameRoute: typeof DashboardCoursesCourseNameRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dummy/content': {
      id: '/dummy/content'
      path: '/dummy/content'
      fullPath: '/dummy/content'
      preLoaderRoute: typeof DummyContentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/courses/$courseName': {
      id: '/dashboard/courses/$courseName'
      path: '/dashboard/courses/$courseName'
      fullPath: '/dashboard/courses/$courseName'
      preLoaderRoute: typeof DashboardCoursesCourseNameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/courses/$courseName/module/$moduleName': {
      id: '/dashboard/courses/$courseName/module/$moduleName'
      path: '/module/$moduleName'
      fullPath: '/dashboard/courses/$courseName/module/$moduleName'
      preLoaderRoute: typeof DashboardCoursesCourseNameModuleModuleNameRouteImport
      parentRoute: typeof DashboardCoursesCourseNameRoute
    }
    '/dashboard/courses/$courseName/module/$moduleName/resources/$resourceName': {
      id: '/dashboard/courses/$courseName/module/$moduleName/resources/$resourceName'
      path: '/resources/$resourceName'
      fullPath: '/dashboard/courses/$courseName/module/$moduleName/resources/$resourceName'
      preLoaderRoute: typeof DashboardCoursesCourseNameModuleModuleNameResourcesResourceNameRouteImport
      parentRoute: typeof DashboardCoursesCourseNameModuleModuleNameRoute
    }
  }
}

interface DashboardCoursesCourseNameModuleModuleNameRouteChildren {
  DashboardCoursesCourseNameModuleModuleNameResourcesResourceNameRoute: typeof DashboardCoursesCourseNameModuleModuleNameResourcesResourceNameRoute
}

const DashboardCoursesCourseNameModuleModuleNameRouteChildren: DashboardCoursesCourseNameModuleModuleNameRouteChildren =
  {
    DashboardCoursesCourseNameModuleModuleNameResourcesResourceNameRoute:
      DashboardCoursesCourseNameModuleModuleNameResourcesResourceNameRoute,
  }

const DashboardCoursesCourseNameModuleModuleNameRouteWithChildren =
  DashboardCoursesCourseNameModuleModuleNameRoute._addFileChildren(
    DashboardCoursesCourseNameModuleModuleNameRouteChildren,
  )

interface DashboardCoursesCourseNameRouteChildren {
  DashboardCoursesCourseNameModuleModuleNameRoute: typeof DashboardCoursesCourseNameModuleModuleNameRouteWithChildren
}

const DashboardCoursesCourseNameRouteChildren: DashboardCoursesCourseNameRouteChildren =
  {
    DashboardCoursesCourseNameModuleModuleNameRoute:
      DashboardCoursesCourseNameModuleModuleNameRouteWithChildren,
  }

const DashboardCoursesCourseNameRouteWithChildren =
  DashboardCoursesCourseNameRoute._addFileChildren(
    DashboardCoursesCourseNameRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DummyContentRoute: DummyContentRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardCoursesCourseNameRoute: DashboardCoursesCourseNameRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
